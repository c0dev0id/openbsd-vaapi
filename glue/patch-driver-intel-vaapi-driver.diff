--- ./src/i965_encoder_utils.c.orig	Mon Jun  1 03:21:40 2020
+++ ./src/i965_encoder_utils.c	Mon Feb 20 08:06:46 2023
@@ -82,6 +82,7 @@
 
 typedef struct __avc_bitstream avc_bitstream;
 
+#ifndef swap32
 static unsigned int
 swap32(unsigned int val)
 {
@@ -92,6 +93,7 @@
             (pval[2] << 8)      |
             (pval[3] << 0));
 }
+#endif
 
 static void
 avc_bitstream_start(avc_bitstream *bs)
--- ./src/i965_output_dri.c.orig	Mon Jun  1 03:21:40 2020
+++ ./src/i965_output_dri.c	Mon Feb 20 08:06:46 2023
@@ -30,7 +30,7 @@
 #include "i965_output_dri.h"
 #include "dso_utils.h"
 
-#define LIBVA_X11_NAME "libva-x11.so.2"
+#define LIBVA_X11_NAME "libva-x11.so"
 
 typedef struct dri_drawable *(*dri_get_drawable_func)(VADriverContextP ctx, XID drawable);
 typedef union dri_buffer *(*dri_get_rendering_buffer_func)(VADriverContextP ctx, struct dri_drawable *d);
--- ./src/i965_output_wayland.c.orig	Mon Jun  1 03:21:40 2020
+++ ./src/i965_output_wayland.c	Mon Feb 20 08:06:46 2023
@@ -36,10 +36,10 @@
 #include "dso_utils.h"
 
 /* We need mesa's libEGL, first try the soname of a glvnd enabled mesa build */
-#define LIBEGL_NAME             "libEGL_mesa.so.0"
+#define LIBEGL_NAME             "libEGL_mesa.so"
 /* Then fallback to plain libEGL.so.1 (which might not be mesa) */
-#define LIBEGL_NAME_FALLBACK    "libEGL.so.1"
-#define LIBWAYLAND_CLIENT_NAME  "libwayland-client.so.0"
+#define LIBEGL_NAME_FALLBACK    "libEGL.so"
+#define LIBWAYLAND_CLIENT_NAME  "libwayland-client.so"
 
 typedef uint32_t (*wl_display_get_global_func)(struct wl_display *display,
                                                const char *interface, uint32_t version);
--- ./meson.build.orig	Mon Jun  1 03:21:40 2020
+++ ./meson.build	Mon Feb 20 08:06:46 2023
@@ -19,7 +19,7 @@
 endif
 
 cc = meson.get_compiler('c')
-dl_dep = cc.find_library('dl')
+dl_dep = cc.find_library('dl', required : false)
 mathlib_dep = cc.find_library('m', required : false)
 
 git = find_program('git', required : false)
